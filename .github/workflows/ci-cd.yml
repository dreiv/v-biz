name: CI CD

on: push

jobs:
  dependencies:
    runs-on: ubuntu-latest
    timeout-minutes: 4

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2

    - name: Cache node_modules 📦
      uses: actions/cache@v2
      id: npm-cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Install 🔧
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm ci

  linting:
    needs: dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 1

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2

    - name: Cache node_modules 📦
      uses: actions/cache@v2
      id: npm-cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Lint 🧐
      run: npm run lint

  testing:
    needs: dependencies
    timeout-minutes: 2
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chunk: [1 ,2]

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2

    - name: Cache node_modules 📦
      uses: actions/cache@v2
      id: npm-cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Test 🚨
      run: .github/scripts/setupTestMatrix.sh ${{ matrix.chunk }} 1

  build-deploy:
    needs: [linting, testing]
    timeout-minutes: 2
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2

    - name: Cache node_modules 📦
      uses: actions/cache@v2
      id: npm-cache
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: Build 🏗
      run: npm run build

    - name: Deploy to gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
